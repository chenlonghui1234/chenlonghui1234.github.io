<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Cheney’s blog</title>
    <link>http://www.kmmedia.top/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>Cheney&#39;blog</description>
    <pubDate>Wed, 01 May 2019 12:57:32 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>Sqlmap 数据包分析</title>
      <link>http://www.kmmedia.top/2019/04/30/Wireshark-%E7%AC%94%E8%AE%B0/</link>
      <guid>http://www.kmmedia.top/2019/04/30/Wireshark-%E7%AC%94%E8%AE%B0/</guid>
      <pubDate>Tue, 30 Apr 2019 12:34:40 GMT</pubDate>
      <description>
      
        
        
          &lt;h3 id=&quot;一、Sqlmap抓包过滤关键信息&quot;&gt;&lt;a href=&quot;#一、Sqlmap抓包过滤关键信息&quot; class=&quot;headerlink&quot; title=&quot;一、Sqlmap抓包过滤关键信息&quot;&gt;&lt;/a&gt;一、Sqlmap抓包过滤关键信息&lt;/h3&gt;&lt;p&gt;1、枚举所有数据库&lt;/p&gt;

        
      
      </description>
      
      <content:encoded><![CDATA[<h3 id="一、Sqlmap抓包过滤关键信息"><a href="#一、Sqlmap抓包过滤关键信息" class="headerlink" title="一、Sqlmap抓包过滤关键信息"></a>一、Sqlmap抓包过滤关键信息</h3><p>1、枚举所有数据库</p><blockquote><p>sqlmap -u “url” –dbs</p></blockquote><p>过滤条件：(ip.addr == IP and http) or http.reponse</p><p>因为sqlmap的url查询语句中有schema_name的关键词，所以搜索关键词也能快速找到关键数据包。</p><p>对所选数据包追踪TCP流，在服务器回复信息中找到由前后各5个混淆码的字符串，中间的即为需要的数据库名，如上一个个找出所有数据库名即可。</p><p>2、枚举用户</p><blockquote><p>sqlmap -u “url” –users</p></blockquote><p>过滤条件：(ip.addr == IP and http) or http.reponse</p><p>搜索查询语句中的user关键词快速找到所需数据包。</p><p>3、枚举当前数据库</p><blockquote><p>sqlmap -u “url” –current-db</p></blockquote><p>过滤条件：(ip.addr == IP and http) or http.reponse</p><p>搜索查询语句中的database关键词快速找到所需数据包。</p><p>4、枚举当前数据库用户</p><blockquote><p>sqlmap -u “url” –current-user</p></blockquote><p>搜索查询语句中的user关键词快速找到所需数据包。</p>]]></content:encoded>
      
      <comments>http://www.kmmedia.top/2019/04/30/Wireshark-%E7%AC%94%E8%AE%B0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Windows 数据执行保护</title>
      <link>http://www.kmmedia.top/2019/04/30/Windows-%E6%95%B0%E6%8D%AE%E6%89%A7%E8%A1%8C%E4%BF%9D%E6%8A%A4/</link>
      <guid>http://www.kmmedia.top/2019/04/30/Windows-%E6%95%B0%E6%8D%AE%E6%89%A7%E8%A1%8C%E4%BF%9D%E6%8A%A4/</guid>
      <pubDate>Tue, 30 Apr 2019 06:48:47 GMT</pubDate>
      <description>
      
        
        
          &lt;h3 id=&quot;数据执行保护简介&quot;&gt;&lt;a href=&quot;#数据执行保护简介&quot; class=&quot;headerlink&quot; title=&quot;数据执行保护简介&quot;&gt;&lt;/a&gt;数据执行保护简介&lt;/h3&gt;&lt;p&gt;DEP - 数据执行保护的缩写，Data Execution Prevention。&lt;br&gt;
        
      
      </description>
      
      <content:encoded><![CDATA[<h3 id="数据执行保护简介"><a href="#数据执行保护简介" class="headerlink" title="数据执行保护简介"></a>数据执行保护简介</h3><p>DEP - 数据执行保护的缩写，Data Execution Prevention。<br>数据执行保护 (DEP) 是一套软硬件技术，能够在内存上执行额外检查以帮助防止在系统上运行恶意代码。</p><blockquote><p>在 Microsoft Windows XP Service Pack 2、 Microsoft Windows Server 2003 Service Pack 1 、Microsoft Windows XP Tablet PC Edition 2005 、 Microsoft Windows Vista 和 Microsoft windows7 中，由硬件和 软件一起强制实施 DEP。</p></blockquote><p>DEP关闭方法：</p><p><strong>开始菜单 &gt; 设置 &gt; 控制面板 &gt; 系统 &gt; 高级 &gt; 启动和故障恢复 &gt; 设置 &gt; 编辑 &gt; 修改文件</strong></p><blockquote><p>multi(0)disk(0)rdisk(0)partition(1)\WINDOWS=”Windows Server 2003, Enterprise” /noexecute=AlwaysOff /fastdetect /DETECTHAL</p></blockquote><p>修改 /noexecute=optout 为 /noexecute=AlwaysOff</p><p>添加 /DETECTHAL detecthal用于强制窗口自动检测硬件抽象层</p><p><strong>/NOEXECUTE</strong></p><p>指定数据执行保护（EDEP）的类型，只适用于32位系统。64位系统的DEP总是打开，有以下几种类型：</p><blockquote><p>1、/NOEXECUTE = OPTIN</p><p>针对系统核心和指定的映像文件打开DEP功能 </p></blockquote><blockquote><p>2、/NOEXECUTE = OPTOUT</p><p>针对指定的映像文件以外的打开DEP功能</p></blockquote><blockquote><p>3、/NOEXECUTE = ALWAYSON</p><p>总是打开DEP功能</p></blockquote><blockquote><p>4、/NOEXECUTE = ALWAYSOFF</p><p>关闭DEP，同/EXECUTE</p></blockquote><p><strong>/EXECUTE</strong></p><p>禁止数据执行保护功能，适用版本XP SP2,2003SP1</p><p><strong>/DETECTHAL</strong></p><p>用于Windows Vista中，将自动检测HAL的类型4</p><h5 id="扩展："><a href="#扩展：" class="headerlink" title="扩展："></a>扩展：</h5><p>HAL硬件抽象层：</p><p>是软件层的例行程序包，用于模拟特定系统平台的细节使程序可以直接访问硬件的资源。</p><p>主要作用为增强硬件的可移植性，保护程序免受变化的冲击，不受硬件的更新换代而重写整个程序，极大的减少了多余的重复操作。</p><h3 id="文章参考"><a href="#文章参考" class="headerlink" title="文章参考"></a>文章参考</h3><p><a href="http://www.voidcn.com/article/p-hjusefhg-ok.html" target="_blank" rel="noopener">http://www.voidcn.com/article/p-hjusefhg-ok.html</a></p>]]></content:encoded>
      
      <comments>http://www.kmmedia.top/2019/04/30/Windows-%E6%95%B0%E6%8D%AE%E6%89%A7%E8%A1%8C%E4%BF%9D%E6%8A%A4/#disqus_thread</comments>
    </item>
    
    <item>
      <title>位 字节 字</title>
      <link>http://www.kmmedia.top/2019/04/30/%E4%BD%8D-%E5%AD%97%E8%8A%82-%E5%AD%97/</link>
      <guid>http://www.kmmedia.top/2019/04/30/%E4%BD%8D-%E5%AD%97%E8%8A%82-%E5%AD%97/</guid>
      <pubDate>Tue, 30 Apr 2019 02:41:53 GMT</pubDate>
      <description>
      
        
        
          &lt;h3 id=&quot;一、计算机单位简要概述&quot;&gt;&lt;a href=&quot;#一、计算机单位简要概述&quot; class=&quot;headerlink&quot; title=&quot;一、计算机单位简要概述&quot;&gt;&lt;/a&gt;一、计算机单位简要概述&lt;/h3&gt;&lt;h5 id=&quot;1、位（bit）：&quot;&gt;&lt;a href=&quot;#1、位（bit）
        
      
      </description>
      
      <content:encoded><![CDATA[<h3 id="一、计算机单位简要概述"><a href="#一、计算机单位简要概述" class="headerlink" title="一、计算机单位简要概述"></a>一、计算机单位简要概述</h3><h5 id="1、位（bit）："><a href="#1、位（bit）：" class="headerlink" title="1、位（bit）："></a>1、位（bit）：</h5><p>来自英文bit，音译为“比特”， 表示二进制位。<strong>主要被用来作为数据的传输单位。</strong></p><p><strong>位是计算机内部数据存储最小单位</strong>，11010100是一个8位二进制数。一个二进制位只可以表示0和1两种状态；两个二进制位可以表示00、01、10、11四种状态；三位二进制可以表示八种状态。 </p><h5 id="2、字节（Byte）："><a href="#2、字节（Byte）：" class="headerlink" title="2、字节（Byte）："></a>2、字节（Byte）：</h5><p><strong>习惯上用大写的B表示，主要被用来作为数据的存储单位。</strong></p><p>字节是计算机中数据处理的基本单位。计算机中以字节位单位存储和解释信息，规定一个字节由由八个二进制位构成， 即一个字节等于8个比特。八位二进制数最小为00000000， 最大为11111111；通常一个字节可以存入一个ASCII码，2个字节可以存放一个汉字国标码。 </p><h5 id="3、字（word）："><a href="#3、字（word）：" class="headerlink" title="3、字（word）："></a>3、字（word）：</h5><p>计算机进行数据处理时， 一次存取、加工和传送的数据长度称为字（word）。一个字通常由一个或多个（一般是字节的整数位）字节构成。例如286微机由2个字节组成，它的字长为16；486微机的字由四个字节组成，它的字长为32位机。 </p><p>计算机的字长决定了其cpu一次操作处理实际位数的多少，由此可见<strong>计算机的字越大， 其性能越优越。</strong> </p><h5 id="4、字长："><a href="#4、字长：" class="headerlink" title="4、字长："></a>4、字长：</h5><p><strong>字长是ALU（算术逻辑部件），在一个时钟周期内最多能运算的二进制位数。</strong></p><p>计算机的每个字所包含的位数称为字长。根据计算机的不同，字长有固定的和可变的两种。固定字长，即字长度不论什么情况都是固定不变的；可变字长，则在一定范围内， 其长度是可变的。 </p><p>计算机的字长是指它一次可以处理的二进制数字的数目。计算机处理数据的速率，自然和它一次能加工的位数以及进行运算的快慢有关。如果一台计算机的字长是另一台计算机的两倍，即使两台计算机速度相同，在相同的时间内，前者能做的工作是后者的两倍。 </p><p>一般的，大型计算机的字长位32-64位，小型计算机位12-32位，而微型计算机位4-16位。<strong>字长是行两计算机性能的一个重要因素。</strong></p><h3 id="二、位单位换算"><a href="#二、位单位换算" class="headerlink" title="二、位单位换算"></a>二、位单位换算</h3><p>计算机位数的单位是 “比特” ，也就是 “位”（bit，简称b），它表示 1 个二进制位。1 比特就是 1 位</p><p>字长的字节数（Byte） = 计算机位数（bit） / 8</p><h3 id="三、字节单位换算"><a href="#三、字节单位换算" class="headerlink" title="三、字节单位换算"></a>三、字节单位换算</h3><p>一个英文字母（不分大小写）占一个字节的空间，一个中文汉字占两个字节的空间。英文标点占一个字节，中文标点占两个字节。</p><p>字长的字节数单位是 “字节”（byte，简称B），它表示 8 个二进制位。</p><p>B=字节    KB=千字节    MB=兆字节    GB=千兆字节</p><p>由于计算机内部采用万能的二进制，而 2 的 10 次方 1024 又非常接近 1000 ，于是很自然的就采用了 1k = 1024 这种换算方式，非常方便。</p><blockquote><p>1 字节（Byte） = 8 位（Bits）</p></blockquote><blockquote><p>1 千字节（KB） = 1024 字节（Bytes）</p></blockquote><blockquote><p>1 兆字节（MB） = 1024 千字节（KB）</p></blockquote><blockquote><p>1 千兆字节（GB） = 1024 兆字节（MB）</p></blockquote>]]></content:encoded>
      
      <comments>http://www.kmmedia.top/2019/04/30/%E4%BD%8D-%E5%AD%97%E8%8A%82-%E5%AD%97/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Telnet 允许root远程登录</title>
      <link>http://www.kmmedia.top/2019/04/29/Telnet-%E5%85%81%E8%AE%B8root%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95/</link>
      <guid>http://www.kmmedia.top/2019/04/29/Telnet-%E5%85%81%E8%AE%B8root%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95/</guid>
      <pubDate>Mon, 29 Apr 2019 06:45:30 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;由于telnet采取明文传输的方式，极其不安全，所以telnet默禁止root远程telnet登录。&lt;/p&gt;
&lt;p&gt;但如果强行开启，也可以实现，方法如下。&lt;/p&gt;
&lt;p&gt;服务安装等就不重复赘述了，网上有很多教程，大家自行搜索。&lt;/p&gt;
&lt;h4 id=&quot;一、修改如下两个配置文
        
      
      </description>
      
      <content:encoded><![CDATA[<p>由于telnet采取明文传输的方式，极其不安全，所以telnet默禁止root远程telnet登录。</p><p>但如果强行开启，也可以实现，方法如下。</p><p>服务安装等就不重复赘述了，网上有很多教程，大家自行搜索。</p><h4 id="一、修改如下两个配置文件关闭telnet服务安全认证"><a href="#一、修改如下两个配置文件关闭telnet服务安全认证" class="headerlink" title="一、修改如下两个配置文件关闭telnet服务安全认证"></a>一、修改如下两个配置文件关闭telnet服务安全认证</h4><p>1、/etc/pam.d/login</p><blockquote><p> #auth [user_unknown=ignore success=ok ignore=ignore default=bad] pam_securetty.so  \前面加#号注释此行</p></blockquote><p>2、/etc/pam.d/remote</p><blockquote><p> #auth required pam_securetty.so \前面加#号注释此行</p></blockquote><h4 id="二、telnet配置文件作用"><a href="#二、telnet配置文件作用" class="headerlink" title="二、telnet配置文件作用"></a>二、telnet配置文件作用</h4><p>1、/etc/xinetd.d/krb5-telnet</p><blockquote><p>使用kerberos协议进行认证，既可以使用明文传输，可以使用密文传输</p></blockquote><p>2、/etc/xinetd.d/ekrb5-telnet</p><blockquote><p>只能使用密文传输，使用kerberos 5协议进行认证。</p><p>ekrb5-telnet可以用来提供加密的telnet服务，如果启用了ekrb5-telnet服务，但是又没有Kerberos服务器的话，那么在进行 telnet登录时，总是会报”Unencrypted connection refused. Goodbye.（未加密的连接，拒绝服务）”这个错误</p></blockquote><h4 id="三、参考文章"><a href="#三、参考文章" class="headerlink" title="三、参考文章"></a>三、参考文章</h4><blockquote><p><a href="http://www.heminjie.com/system/linux/6233.html" target="_blank" rel="noopener">http://www.heminjie.com/system/linux/6233.html</a></p><p><a href="http://blog.sina.com.cn/s/blog_60fd00bb0100shxx.html" target="_blank" rel="noopener">http://blog.sina.com.cn/s/blog_60fd00bb0100shxx.html</a></p></blockquote>]]></content:encoded>
      
      <comments>http://www.kmmedia.top/2019/04/29/Telnet-%E5%85%81%E8%AE%B8root%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95/#disqus_thread</comments>
    </item>
    
    <item>
      <title>CentOS 5.5 Samba服务配置</title>
      <link>http://www.kmmedia.top/2019/04/24/CentOS-Samba%E6%9C%8D%E5%8A%A1%E9%85%8D%E7%BD%AE/</link>
      <guid>http://www.kmmedia.top/2019/04/24/CentOS-Samba%E6%9C%8D%E5%8A%A1%E9%85%8D%E7%BD%AE/</guid>
      <pubDate>Wed, 24 Apr 2019 01:37:26 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;1、安装samba服务&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt; yum install samba system-config-samba samba-client samba-common&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;2、创建samba用户&lt;/p&gt;
&lt;bl
        
      
      </description>
      
      <content:encoded><![CDATA[<p>1、安装samba服务</p><blockquote><p> yum install samba system-config-samba samba-client samba-common</p></blockquote><p>2、创建samba用户</p><blockquote><p>useradd samba</p><p>mkdir -p /home/smbtest</p><p>chmod 777 /home/smbtest</p><p>chown -R samba:samba /home/smbtest</p></blockquote><p>3、修改配置文件</p><blockquote><p>[global]</p><p>security = user</p><p>[smbtest]</p><p>path = /home/smbtest</p><p>writable = yes #写入权限</p><p>create mask = 0644 #上传权限</p><p>directory mask = 0755 #下载权限</p></blockquote><p>4、linux访问smb服务器</p><blockquote><p>smbclient //192.168.199.30/smbtest -U username</p><p>put test.txt #上传文件</p><p>get test.txt #下载文件</p></blockquote>]]></content:encoded>
      
      <comments>http://www.kmmedia.top/2019/04/24/CentOS-Samba%E6%9C%8D%E5%8A%A1%E9%85%8D%E7%BD%AE/#disqus_thread</comments>
    </item>
    
    <item>
      <title>hexo添加下载功能</title>
      <link>http://www.kmmedia.top/2019/04/24/hexo%E6%B7%BB%E5%8A%A0%E4%B8%8B%E8%BD%BD%E5%8A%9F%E8%83%BD/</link>
      <guid>http://www.kmmedia.top/2019/04/24/hexo%E6%B7%BB%E5%8A%A0%E4%B8%8B%E8%BD%BD%E5%8A%9F%E8%83%BD/</guid>
      <pubDate>Wed, 24 Apr 2019 01:15:24 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;1、在source目录下新建download目录与_posts&lt;code&gt;About&lt;/code&gt;tags&lt;code&gt;&lt;/code&gt;categories等目录并列。&lt;/p&gt;
&lt;p&gt;2、将文件放入download目录下&lt;/p&gt;
&lt;p&gt;3、在需要下载的文章中写入如下html超链
        
      
      </description>
      
      <content:encoded><![CDATA[<p>1、在source目录下新建download目录与_posts<code>About</code>tags<code></code>categories等目录并列。</p><p>2、将文件放入download目录下</p><p>3、在需要下载的文章中写入如下html超链接语句，但需要在github或者coding上同步博客文件才可正常下载。</p><blockquote><p><a href="/download/NTLMv1.pcapng" target="_blank">NTLMv1.pcapng</a></p></blockquote><h4 id="文章参考："><a href="#文章参考：" class="headerlink" title="文章参考："></a>文章参考：</h4><h5 id="https-www-cnblogs-com-yanh0606-p-10488356-html"><a href="#https-www-cnblogs-com-yanh0606-p-10488356-html" class="headerlink" title="https://www.cnblogs.com/yanh0606/p/10488356.html"></a><a href="https://www.cnblogs.com/yanh0606/p/10488356.html" target="_blank" rel="noopener">https://www.cnblogs.com/yanh0606/p/10488356.html</a></h5><h5 id="http-yanng-cc-2018-03-18-hexo-E6-B7-BB-E5-8A-A0-E4-B8-8B-E8-BD-BD-E5-8A-9F-E8-83-BD"><a href="#http-yanng-cc-2018-03-18-hexo-E6-B7-BB-E5-8A-A0-E4-B8-8B-E8-BD-BD-E5-8A-9F-E8-83-BD" class="headerlink" title="http://yanng.cc/2018/03/18/hexo%E6%B7%BB%E5%8A%A0%E4%B8%8B%E8%BD%BD%E5%8A%9F%E8%83%BD/"></a><a href="http://yanng.cc/2018/03/18/hexo%E6%B7%BB%E5%8A%A0%E4%B8%8B%E8%BD%BD%E5%8A%9F%E8%83%BD/" target="_blank" rel="noopener">http://yanng.cc/2018/03/18/hexo%E6%B7%BB%E5%8A%A0%E4%B8%8B%E8%BD%BD%E5%8A%9F%E8%83%BD/</a></h5>]]></content:encoded>
      
      <comments>http://www.kmmedia.top/2019/04/24/hexo%E6%B7%BB%E5%8A%A0%E4%B8%8B%E8%BD%BD%E5%8A%9F%E8%83%BD/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Samba 协议工作流程</title>
      <link>http://www.kmmedia.top/2019/04/24/Samba-%E5%8D%8F%E8%AE%AE%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B/</link>
      <guid>http://www.kmmedia.top/2019/04/24/Samba-%E5%8D%8F%E8%AE%AE%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B/</guid>
      <pubDate>Wed, 24 Apr 2019 01:15:24 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;一、Samba的工作流程主要为四个阶段：&quot;&gt;&lt;a href=&quot;#一、Samba的工作流程主要为四个阶段：&quot; class=&quot;headerlink&quot; title=&quot;一、Samba的工作流程主要为四个阶段：&quot;&gt;&lt;/a&gt;一、Samba的工作流程主要为四个阶段：&lt;/h1&gt;&lt;
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="一、Samba的工作流程主要为四个阶段："><a href="#一、Samba的工作流程主要为四个阶段：" class="headerlink" title="一、Samba的工作流程主要为四个阶段："></a>一、Samba的工作流程主要为四个阶段：</h1><h2 id="1、协议协商"><a href="#1、协议协商" class="headerlink" title="1、协议协商"></a>1、协议协商</h2><ul><li><p>客户端在访问Samba服务器时，首先由客户端发送一个SMB negprot请求数据包，并列出它所支持的所有SMB协议版本。</p></li><li><p>服务器在接受到请求信息吼开始响应请求，并列出希望使用的协议版本，选择最优的SMB类型。</p></li><li><p>如果没有可使用的协议版本则返回oXFFFFH信息，结束通信。</p></li></ul><h2 id="2、建立连接"><a href="#2、建立连接" class="headerlink" title="2、建立连接"></a>2、建立连接</h2><ul><li><p>当SMB协议版本确定后，客户端进程向服务器发起一个用户或共享的认证，这个过程是通过发送SesssetupX请求数据报实现的。</p></li><li><p>客户端发送一对用户名和密码或一个简单密码到服务器，然后服务器通过发送一个SesssetupX请应答数据报来允许或拒绝本次连接。</p></li></ul><h2 id="3、访问共享资源"><a href="#3、访问共享资源" class="headerlink" title="3、访问共享资源"></a>3、访问共享资源</h2><ul><li>当客户端和服务器完成了协商和认证之后，它会发送一个Tcon或S·MB TconX数据报并列出它想访问网络资源的名称，之后服务器会发送一个SMB TconX应答数据报以表示此次连接是否被接受或拒绝。</li></ul><h2 id="4、断开连接"><a href="#4、断开连接" class="headerlink" title="4、断开连接"></a>4、断开连接</h2><ul><li>连接到相应资源，SMB客户端就能够open SMB打开一个文件，通过read SMB读取文件，通过write SMB写入文件，通过close SMB关闭文件。</li></ul><h3 id="参考文章："><a href="#参考文章：" class="headerlink" title="参考文章："></a>参考文章：</h3><h4 id="https-zhuanlan-zhihu-com-p-41449862"><a href="#https-zhuanlan-zhihu-com-p-41449862" class="headerlink" title="https://zhuanlan.zhihu.com/p/41449862"></a><a href="https://zhuanlan.zhihu.com/p/41449862" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/41449862</a></h4>]]></content:encoded>
      
      <comments>http://www.kmmedia.top/2019/04/24/Samba-%E5%8D%8F%E8%AE%AE%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Net-NTLMv1、NTLMv2 数据包分析</title>
      <link>http://www.kmmedia.top/2019/04/24/NTLMv1%E3%80%81NTLMv2-%E6%95%B0%E6%8D%AE%E5%8C%85%E5%88%86%E6%9E%90/</link>
      <guid>http://www.kmmedia.top/2019/04/24/NTLMv1%E3%80%81NTLMv2-%E6%95%B0%E6%8D%AE%E5%8C%85%E5%88%86%E6%9E%90/</guid>
      <pubDate>Wed, 24 Apr 2019 01:15:24 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;一、Net-NTMLMv1，Net-NTLMv2工作流程：&quot;&gt;&lt;a href=&quot;#一、Net-NTMLMv1，Net-NTLMv2工作流程：&quot; class=&quot;headerlink&quot; title=&quot;一、Net-NTMLMv1，Net-NTLMv2工作流程：&quot;&gt;&lt;/a
        
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="一、Net-NTMLMv1，Net-NTLMv2工作流程："><a href="#一、Net-NTMLMv1，Net-NTLMv2工作流程：" class="headerlink" title="一、Net-NTMLMv1，Net-NTLMv2工作流程："></a>一、Net-NTMLMv1，Net-NTLMv2工作流程：</h2><h3 id="Net-NTLMv1的加密方法如下："><a href="#Net-NTLMv1的加密方法如下：" class="headerlink" title="Net-NTLMv1的加密方法如下："></a>Net-NTLMv1的加密方法如下：</h3><blockquote><p>1、客户端向服务器发送一个请求</p><p>2、服务器接收到请求后，生成一个8位的Challenge，发送回客户端</p><p>3、客户端接收到Challenge后，使用登录用户的密码hash对Challenge加密，作为response发送给服务器</p><p>4、服务器校验response</p></blockquote><h3 id="对比Net-NTLMv1，Net-NTLMv2的加密方法如下："><a href="#对比Net-NTLMv1，Net-NTLMv2的加密方法如下：" class="headerlink" title="对比Net-NTLMv1，Net-NTLMv2的加密方法如下："></a>对比Net-NTLMv1，Net-NTLMv2的加密方法如下：</h3><blockquote><p>1、客户端向服务器发送一个请求</p><p>2、服务器接收到请求后，生成一个16位的Challenge，发送回客户端</p><p>3、客户端接收到Challenge后，使用登录用户的密码hash对Challenge加密，作为response发送给服务器</p><p>4、服务器校验response </p></blockquote><p>两者的<strong>流程相同</strong>，但<strong>加密算法不同</strong>，Net-NTLMv1相对脆弱，Net-NTLMv1 response的计算方法比较简单，方法如下(目前LM hash很少接触，不考虑)：将用户的NTLM hash分成三组，每组7比特(长度不够末尾填0)，作为3DES加密算法的三组密钥，加密Server发来的Challenge</p><h2 id="二、数据包密码破解"><a href="#二、数据包密码破解" class="headerlink" title="二、数据包密码破解"></a>二、数据包密码破解</h2><h3 id="Net-NTLMv1"><a href="#Net-NTLMv1" class="headerlink" title="Net-NTLMv1"></a>Net-NTLMv1</h3><p>NTLMv1 数据包文件下载：<a href="/download/NTLMv1.pcapng" target="_blank">NTLMv1.pcapng</a></p><p>客户端：192.168.199.59</p><p>服务器：192.168.199.210</p><ul><li>Net-NTLMv1的加密流程</li></ul><p><strong>1、客户端向服务器发送一个请求</strong></p><p><img src="https://raw.githubusercontent.com/chenlonghui1234/Graphbed/master/20190425164651.png" alt></p><p><strong>2、服务器接收到请求后，生成一个8位的Challenge，发送回客户端</strong></p><p><img src="https://raw.githubusercontent.com/chenlonghui1234/Graphbed/master/20190425164911.png" alt></p><p><strong>3、客户端接收到Challenge后，使用登录用户的密码hash对Challenge加密，作为response发送给服务器</strong></p><p><img src="https://raw.githubusercontent.com/chenlonghui1234/Graphbed/master/20190425165424.png" alt></p><p><strong>4、服务器校验response</strong></p><p><img src="https://raw.githubusercontent.com/chenlonghui1234/Graphbed/master/20190425165516.png" alt></p><blockquote><p>密码hash固定拼接格式：username :: hostname : LM response : NTLM response : Server challenge</p></blockquote><p>NTLM Server Challenge: f9c7fc816b991824</p><p>Lan Manager Response: c67ee888f6b41a4400000000000000000000000000000000</p><p>NTLM Response: 293b99da834c86c6e37c37a20920b41581be32740a5e062e</p><p>User name: asd</p><p>Host name: QWE-C78DBB1CBD0</p><p>拼接后字符串为：<br>asd::QWE-C78DBB1CBD0:c67ee888f6b41a4400000000000000000000000000000000:293b99da834c86c6e37c37a20920b41581be32740a5e062e:f9c7fc816b991824</p><p>使用hashcat破解密码：</p><p>hashcat -m 5500 拼接字符串或字符串文件 密码字典 –force</p><p>hashcat -m 5500 拼接字符串或字符串文件 密码字典 –force –show 显示破解密码</p><h3 id="Net-NTLMv2解析"><a href="#Net-NTLMv2解析" class="headerlink" title="Net-NTLMv2解析"></a>Net-NTLMv2解析</h3><p>NTLMv2 数据包文件下载：<a href="/download/NTLMv2.pcapng" target="_blank">NTLMv2.pcapng</a></p><p><strong>1、客户端向服务器发送一个请求</strong></p><p><img src="https://raw.githubusercontent.com/chenlonghui1234/Graphbed/master/20190425192850.png" alt></p><p><strong>2、服务器接收到请求后，生成一个16位的Challenge，发送回客户端</strong></p><p><img src="https://raw.githubusercontent.com/chenlonghui1234/Graphbed/master/20190425192439.png" alt></p><p><strong>3、客户端接收到Challenge后，使用登录用户的密码hash对Challenge加密，作为response发送给服务器</strong></p><p><img src="https://raw.githubusercontent.com/chenlonghui1234/Graphbed/master/20190425192619.png" alt></p><p><img src="https://raw.githubusercontent.com/chenlonghui1234/Graphbed/master/20190425192719.png" alt></p><p><strong>4、服务器校验response </strong></p><p><img src="https://raw.githubusercontent.com/chenlonghui1234/Graphbed/master/20190425192946.png" alt></p><blockquote><p>密码hash固定拼接格式：username :: domain : challenge : NTProofStr : NTLM Response - NTProofStr</p></blockquote><p>NTLM Server Challenge: f12d23c3e60843cc</p><p>32a48adf53baf6ef888482d94e2220010101000000000000e844288052f7d40108c126eda5b696d60000000002001e004d0058002d0041003200390033004600450037003400370037004300420001001e004d0058002d0041003200390033004600450037003400370037004300420004001e006d0078002d0061003200390033006600650037003400370037006300620003001e006d0078002d0061003200390033006600650037003400370037006300620008003000300000000000000000000000000000009cde6da7297d9f2a9087cd22f3bc9e914a6894544023040d6979fffc8bd2b6290a001000000000000000000000000000000000000900260063006900660073002f003100390032002e003100360038002e00310033002e0031003200390000000000</p><p>NTProofStr: 32a48adf53baf6ef888482d94e222001</p><p>Domain name: WORKGROUP</p><p>User name: <a href="http://www.ld80.cn" target="_blank" rel="noopener">www.ld80.cn</a></p><p>使用hashcat破解密码：</p><p>hashcat -m 指定hash类型 5600（NTLMv2） 拼接字符串 密码字典 –force 开始破解</p><p>hashcat -m 指定hash类型 5600（NTLMv2） 拼接字符串 密码字典 –force –show 显示破解密码</p><p>hashcat –help | grep NTLM 过滤出相关协议</p><h2 id="三、总结"><a href="#三、总结" class="headerlink" title="三、总结"></a>三、总结</h2><p>这篇文章花了两天的时间把它给写完了，刚开始做了很多实验，一直很困惑这个协议是如何运作，如今终于搞明白了。</p><p>当然这在计算机网络中只是很渺小的一部分，今后还应该继续努力。</p><h4 id="参考文章："><a href="#参考文章：" class="headerlink" title="参考文章："></a>参考文章：</h4><h5 id="https-3gstudent-github-io-3gstudent-github-io-Windows-E4-B8-8B-E7-9A-84-E5-AF-86-E7-A0-81hash-Net-NTLMv1-E4-BB-8B-E7-BB-8D"><a href="#https-3gstudent-github-io-3gstudent-github-io-Windows-E4-B8-8B-E7-9A-84-E5-AF-86-E7-A0-81hash-Net-NTLMv1-E4-BB-8B-E7-BB-8D" class="headerlink" title="https://3gstudent.github.io/3gstudent.github.io/Windows%E4%B8%8B%E7%9A%84%E5%AF%86%E7%A0%81hash-Net-NTLMv1%E4%BB%8B%E7%BB%8D/"></a><a href="https://3gstudent.github.io/3gstudent.github.io/Windows%E4%B8%8B%E7%9A%84%E5%AF%86%E7%A0%81hash-Net-NTLMv1%E4%BB%8B%E7%BB%8D/" target="_blank" rel="noopener">https://3gstudent.github.io/3gstudent.github.io/Windows%E4%B8%8B%E7%9A%84%E5%AF%86%E7%A0%81hash-Net-NTLMv1%E4%BB%8B%E7%BB%8D/</a></h5>]]></content:encoded>
      
      <comments>http://www.kmmedia.top/2019/04/24/NTLMv1%E3%80%81NTLMv2-%E6%95%B0%E6%8D%AE%E5%8C%85%E5%88%86%E6%9E%90/#disqus_thread</comments>
    </item>
    
    <item>
      <title>堆栈笔记</title>
      <link>http://www.kmmedia.top/2019/04/21/%E5%A0%86%E6%A0%88%E7%AC%94%E8%AE%B0/</link>
      <guid>http://www.kmmedia.top/2019/04/21/%E5%A0%86%E6%A0%88%E7%AC%94%E8%AE%B0/</guid>
      <pubDate>Sun, 21 Apr 2019 11:08:53 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;内存是高高低低&lt;/p&gt;
&lt;p&gt;堆栈是低低高高&lt;/p&gt;

        
      
      </description>
      
      <content:encoded><![CDATA[<p>内存是高高低低</p><p>堆栈是低低高高</p>]]></content:encoded>
      
      <comments>http://www.kmmedia.top/2019/04/21/%E5%A0%86%E6%A0%88%E7%AC%94%E8%AE%B0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Kali w3af工具使用</title>
      <link>http://www.kmmedia.top/2019/04/20/Kali-w3af%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/</link>
      <guid>http://www.kmmedia.top/2019/04/20/Kali-w3af%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/</guid>
      <pubDate>Sat, 20 Apr 2019 02:18:32 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;1、./w3af_console&lt;/p&gt;

        
      
      </description>
      
      <content:encoded><![CDATA[<p>1、./w3af_console</p>]]></content:encoded>
      
      <comments>http://www.kmmedia.top/2019/04/20/Kali-w3af%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
